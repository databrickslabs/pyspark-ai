[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyspark-ai"
version = "0.1.20"
description = "English SDK for Apache Spark"
authors = ["Gengliang Wang <gengliang@apache.org>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/databrickslabs/pyspark-ai"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.8.1"
pydantic = "^1.10.10"
openai = "^0.27.8"
langchain = ">=0.0.353,<0.1.0"
pygments = "^2.15.1"

# plot extras
pandas = { version = ">=1.0.5", optional = true }
plotly = { version = "^5.15.0", optional = true }
pyarrow = { version = ">=4.0.0", optional = true }

# vector search extras
faiss-cpu = { version = "^1.7.4", optional = true }
sentence-transformers = { version = "^2.2.2", optional = true }
# avoid torch version poetry.lock bug https://github.com/pytorch/pytorch/issues/100974
torch = { version = ">=2.0.0, !=2.0.1, !=2.1.0", optional = true }

# ingestion extras
requests = { version = "^2.31.0", optional = true }
tiktoken = { version = "0.4.0", optional = true }
beautifulsoup4 = { version = "^4.12.2", optional = true }
google-api-python-client = { version = "^2.90.0", optional = true }

# spark connect extras
grpcio = { version = ">=1.56.0", optional = true }
grpcio-status = { version = ">=1.56.0", optional = true }

[tool.poetry.group.dev.dependencies]
pyspark = "^3.4.0"
babel = "^2.12.1"
chispa = "^0.9.2"

[tool.poetry.group.lint.dependencies]
black = "^23.11.0"
ruff = "^0.1.6"

[tool.poetry.extras]
plot = ["pandas", "plotly", "pyarrow"]
vector-search = ["faiss-cpu", "sentence-transformers", "torch"]
ingestion = ["requests", "tiktoken", "beautifulsoup4", "google-api-python-client"]
spark-connect = ["grpcio", "grpcio-status"]
all = ["pandas",
        "plotly",
        "pyarrow",
        "faiss-cpu",
        "sentence-transformers",
        "torch",
        "requests",
        "tiktoken",
        "beautifulsoup4",
        "google-api-python-client",
        "grpcio",
        "grpcio-status"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "__pycache__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "examples"
]

line-length = 120
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "W", "C", "S", "I"]
ignore = []
# See https://github.com/PyCQA/pycodestyle/issues/373
extend-ignore = ["E203", "F401"]
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
